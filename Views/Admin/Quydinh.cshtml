<h2 style="">Quản Lý Quy Định</h2>


<!-- Modal edit-->
<div id="addcbModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="add">Thêm Quy Định</h4>
                </div>
                <div class="modal-body">              
                    <p>Số Quy Định : <input id="addma" class="inputs" type="text"/></p>
                    <p>Năm Học : <select id="addnamhoc" class="inputs"></select></p>
                    <p>Ngày Ban Hành : <input id="addngaybd" class="inputs" type="text"/></p>
                    <p>Nội Dung : <textarea class="form-control" rows="5" id="addngaykt"></textarea></p>
                </div>
                <div class="modal-footer" id="">
                    <button id="saveCbnv" type="button" class="btn btn-default" data-dismiss="modal">Lưu lại</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
</div>
<div id="editcbModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="add">Cập Nhật Quy Định</h4>
                </div>
                <div class="modal-body">
                    <p>Só Quy Định: <input id="editmahk" class="inputs" type="text"/></p>
                    <p>Năm Học :  <select  class="inputs" id="editmanamhoc"></select></p>
                    <p>Ngày Ban Hành: <input id="editngaybd" class="inputs" type="text"/></p>
                    <p>Nội Dung :
                    <textarea class="form-control" rows="5" id="editngaykt"></textarea></p>
                </div>
                <div class="modal-footer" id="edit3">
                    
                </div>
            </div>
        </div>
</div>

<div id="detaicblModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
     <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="add">Thông Tin Chi Tiết</h4>
            </div>
            <div class="modal-body">   
                <fieldset disabled>  
                <p>  Số Quy Định : <input id="detailma" class="inputs" type="text"/></p>
                <p>  Ngày Ban Hành : <input id="detailns" class="inputs" type="text"/></p>
                <p>  Năm Học : <input id="detailhv" class="inputs" type="text"/></p>
                <p>  Nội Dung : <textarea class="form-control" rows="5" id="detaildc"></textarea>
                </fieldset>    
            </div>
            <div class="modal-footer" id="edit1"></div>
        </div>
    </div>
</div>
<div id="deleteModel" class="modal fade" role="dialog">
    <div class="modal-dialog">
    <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="add">Bạn Có Muốn Xóa</h4>
                </div>
                <div class="modal-body">   
                    <fieldset disabled>       
                    <p>Số Quy Định : <input id="deletema" class="inputs" type="text"/></p>
                  </fieldset>    
                </div>
                <div class="modal-footer" id="edit2">
                </div>
            </div>
        </div>
</div>
  <!-- Modal -->
<div class="">
    <div class="container">
        <div class="row">
        <div class="col-sm-6">
            <button class="btn btn-info fa fa-plus-square" id="addCb" onclick="themHocky()" type="button"> Thêm</button>
        </div>
          <div class="col-sm-6">
            <p>Tìm Kiếm: <span><input type="text" id="seach" onkeyup="seach()"/></span></p>
        </div>
        </div>
    </div>
</div>
<table class="table">
    <tr align='center' height='30px'>
        <td>Số Quy Định</td>
        <td>Năm Học</td>
        <td>Ngày Ban Hành</td>
        <td>Nội Dung</td>
         <td></td>
    </tr>
    <tbody id="tbody">

    </tbody>
</table>
 <ul class=pagination>
        <li id="previous-page"><a href="javascript:void(0)" aria-label=Previous><span aria-hidden=true>&laquo;</span></a></li>
</ul>
@section scripts{
<script>
$(document).ready(function () {
    loadcb()
    // $('#tbody').paginathing({
    //              perPage: 5,
    //          });
     
})
class QuyDinh {
            constructor(so,nh,ngay,nd) {
            this.soQuyDinh=so;
            this.maNamHoc=nh;
            this.ngayBanHanh=ngay;
            this.noiDungQuyDinh=nd;
            }
        }
function convertDatetime(dt) {

    res = dt.substring(5, 7) +"-"+dt.substring(8, 10) +  "-" + dt.substring(0, 4);
    return res;
}
function loadcb(){
    $.ajax({
        type: "GET",
        url: "/api/Quydinh",
        success: function(data){
            console.log(data);
            getData(data);
           // seach(data);
           pagging(data);
        }
    })
}

//load droplist nam hoc
let dropdown1 = $('#addnamhoc');
        dropdown1.empty();
        dropdown1.append('<option selected="true" disabled>Chọn Năm Học</option>');
        dropdown1.prop('selectedIndex', 0);
        const url1 = '/api/Namhoc';
        // Populate dropdown with list of provinces
        $.getJSON(url1, function (data) {
            console.log(data);
            $.each(data, function (key, entry) {
                dropdown1.append($('<option></option>').attr('value', entry.maNamHoc).text( "["+entry.maNamHoc+"]" +" " +"Ngày Bắt Đầu : "+ convertDatetime(entry.ngayBatDauNamHoc)+" " +"Ngày Kết Thúc :" + convertDatetime(entry.ngayKetThucNamHoc)));
            })
});
function getData(data) {

    $("#tbody").html("");
    data.forEach(item => {
        $("#tbody").append(loadcbnv(item));        
    }); 
}
function loadcbnv(item) {
    detailsHtml ='<tr class="list-group">';
    detailsHtml += '<td>'+item.soQuyDinh+'</td>'+
    '<td >'+item.maNamHoc +'</td>'+
    '<td>'+convertDatetime(item.ngayBanHanh) +'</td>'+
    '<td>'+item.noiDungQuyDinh+'</td>'+
    '<td>'
    +'<button type="button" class=" btn btn-info fa fa-edit showcn" onclick="suaHocky(\''+ item.soQuyDinh +'\')"><span class="tooltiptext">Sửa</span></button>|<button type="button" class="btn btn-info fa fa-file-text-o showcn" onclick="chitietHocky(\'' + item.soQuyDinh + '\')"><span class="tooltiptext">Chi tiết</span></button>|<button type="button" class="btn btn-info fa fa-trash-o showcn" onclick="xoaHocky(\'' + item.soQuyDinh + '\')"><span class="tooltiptext">Xóa </span></button> '
    detailsHtml +='</tr>';  
    return detailsHtml;
}

function pagging(data){ 
    var numberOfItems = data.length; // Get total number of the items that should be paginated
    var limitPerPage = 7; // Limit of items per each page
    $('#tbody .list-group:gt(' + (limitPerPage - 1) + ')').hide(); // Hide all items over page limits (e.g., 5th item, 6th item, etc.)
    var totalPages = Math.round(numberOfItems / limitPerPage); // Get number of pages

    // Loop to insert page number for each sets of items equal to page limit (e.g., limit of 4 with 20 total items = insert 5 pages)
    for (var i = 1; i <= totalPages; i++) {
  $(".pagination").append("<li class='current-page'><a href='javascript:void(0)'>" + i + "</a></li>"); // Insert page number into pagination tabs
    }
    // Add next button after all the page numbers  
    $(".pagination").append("<li id='next-page'><a href='javascript:void(0)' aria-label=Next><span aria-hidden=true>&raquo;</span></a></li>");


    // Function that displays new items based on page number that was clicked   
    $(".pagination li.current-page").on("click", function() {
  // Check if page number that was clicked on is the current page that is being displayed
  if ($(this).hasClass('active')) {
    return false; // Return false (i.e., nothing to do, since user clicked on the page number that is already being displayed)
  } else {
    var currentPage = $(this).index(); // Get the current page number
    $(".pagination li").removeClass('active'); // Remove the 'active' class status from the page that is currently being displayed
    $(this).addClass('active'); // Add the 'active' class status to the page that was clicked on
    $("#tbody .list-group").hide(); // Hide all items in loop, this case, all the list groups
    var grandTotal = limitPerPage * currentPage; // Get the total number of items up to the page number that was clicked on

    // Loop through total items, selecting a new set of items based on page number
    for (var i = grandTotal - limitPerPage; i < grandTotal; i++) {
      $("#tbody .list-group:eq(" + i + ")").show(); // Show items from the new page that was selected
    }
  }

    });

    // Function to navigate to the next page when users click on the next-page id (next page button)
    $("#next-page").on("click", function() {
  var currentPage = $(".pagination li.active").index(); // Identify the current active page
  // Check to make sure that navigating to the next page will not exceed the total number of pages
  if (currentPage === totalPages) {
    return false; // Return false (i.e., cannot navigate any further, since it would exceed the maximum number of pages)
  } else {
    currentPage++; // Increment the page by one
    $(".pagination li").removeClass('active'); // Remove the 'active' class status from the current page
    $("#tbody .list-group").hide(); // Hide all items in the pagination loop
    var grandTotal = limitPerPage * currentPage; // Get the total number of items up to the page that was selected

    // Loop through total items, selecting a new set of items based on page number
    for (var i = grandTotal - limitPerPage; i < grandTotal; i++) {
      $("#tbody .list-group:eq(" + i + ")").show(); // Show items from the new page that was selected
    }

    $(".pagination li.current-page:eq(" + (currentPage - 1) + ")").addClass('active'); // Make new page number the 'active' page
  }
    });

    // Function to navigate to the previous page when users click on the previous-page id (previous page button)
    $("#previous-page").on("click", function() {
  var currentPage = $(".pagination li.active").index(); // Identify the current active page
  // Check to make sure that users is not on page 1 and attempting to navigating to a previous page
  if (currentPage === 1) {
    return false; // Return false (i.e., cannot navigate to a previous page because the current page is page 1)
  } else {
    currentPage--; // Decrement page by one
    $(".pagination li").removeClass('active'); // Remove the 'activate' status class from the previous active page number
    $("#tbody .list-group").hide(); // Hide all items in the pagination loop
    var grandTotal = limitPerPage * currentPage; // Get the total number of items up to the page that was selected

    // Loop through total items, selecting a new set of items based on page number
    for (var i = grandTotal - limitPerPage; i < grandTotal; i++) {
      $("#tbody .list-group:eq(" + i + ")").show(); // Show items from the new page that was selected
    }

    $(".pagination li.current-page:eq(" + (currentPage - 1) + ")").addClass('active'); // Make new page number the 'active' page
  }
});
}
function xoaHocky(id){ 
    $("#deleteModel").modal("show");

    $.ajax({
        url:'/api/Quydinh/'+ id,
        type: "GET",
        success:function(data){
            console.log(data);
            $("#deletema").val(data.soQuyDinh);
            $("#edit2").html('<button onclick="savedelete(\''+ data.soQuyDinh +'\')" type="button" class="btn btn-default" data-dismiss="modal">Xóa</button> <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>');
        }
    })
}
function savedelete(id){
    $.ajax({
        url:'/api/Quydinh/Delete/'+id,
        type:'GET',
        contentType: "application/json; charset=utf-8",
        dataType: 'json',
        success: function(data){
        console.log(data);
        loadcb();
        alert("Đã Xóa Thành Công");
        location.reload();
        },
        error: function(){
            alert("Xóa Không Thành Công");
        }
    });
}
function suaHocky(id){

     $("#editngaybd").datepicker({
    autoclose:true,
    orientation: "bottom",
    format: "mm-dd-yyyy",
    })
    $("#editngaykt").datepicker({
    autoclose:true,
    orientation: "bottom",
    format: "mm-dd-yyyy"
        })
    let dropdown3 = $('#editmanamhoc');
    dropdown3.empty();
    $("#editcbModal").modal("show");
    $.ajax({
        url:'/api/Quydinh/'+ id,
        type: "GET",
        success:function(data){
            $("#editmahk").val(data.soQuyDinh);
            $("#editngaybd").val(convertDatetime(data.ngayBanHanh));
            $("#editngaykt").val(data.noiDungQuyDinh);
            dropdown3.append('<option selected="true" disabled>Chọn Năm Học</option>');
            dropdown3.prop('selectedIndex', 0);
            const url3 = '/api/Namhoc';
            // Populate dropdown with list of provinces
                $.getJSON(url3, function (dat) {
                    console.log('step 1');
                    console.log(dat);
                    dat.forEach(key => {
                        console.log(key);
                         if (key.maNamHoc == data.maNamHoc) {
                            dropdown3.append($('<option selected="true" value='+key.maNamHoc+'></option>').text("["+key.maNamHoc+"]"+" " +"Bắt Đầu Từ Ngày : "+ convertDatetime(key.ngayBatDauNamHoc)+ " " +" Đến Ngày :" + convertDatetime(key.ngayKetThucNamHoc)));
                        }
                        else {
                            dropdown3.append($('<option value='+key.maNamHoc+'></option>').text( "["+key.maNamHoc+"]"+" " +"Bắt Đầu Từ Ngày : "+ convertDatetime(key.ngayBatDauNamHoc)+ " " +" Đến Ngày :" + convertDatetime(key.ngayKetThucNamHoc)));
                            }
                        })
                    })
            $("#edit3").html('<button onclick="saveedit(\''+ data.soQuyDinh +'\')" type="button" class="btn btn-default" data-dismiss="modal">Lưu lại</button> <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>');
            console.log(data);
        }
    })
}
function saveedit(id){
    var so = $('#editmahk').val();
    var  nh = $('#editmanamhoc').val();
    var ngay = $('#editngaybd').val();
    var nd = $('#editngaykt').val();
        var tem = new  QuyDinh (so,nh,ngay,nd) 
       console.log(tem);
        $.ajax({
            url:'/api/Quydinh/Edit/'+id,
            type:'POST',
            dataType: 'json',
            data: JSON.stringify(tem),
            contentType: "application/json; charset=utf-8",
                success: function(){
                    alert("Cập Nhật Thành Công");
                    location.reload();
                },
                error: function(){
                    alert("Cập Nhật Thất Bại")
                }
            });
        }
function chitietHocky(id){
    $("#detailma").val('');
    $("#detailho").val('');
    $("#detailns").val('');
    $("#detailphai").val('');
    $("#detailcv").val('')
    $("#detailtdv").val('');
    $("#detailhv").val('');
    $("#detailsdt").val('');
    $("#detaildc").val('');
    $("#detaicblModal").modal("show");
    $.ajax({
        url:'/api/Quydinh/'+ id,
        type: "GET",
        success:function(data){
            if(data.length <0)
            {
                alert("Chưa cập nhật Chi tiết quản lý");
            }
            else
            {
        
            console.log(data);
            $("#detailma").val(data.soQuyDinh);
            $("#detailns").val(convertDatetime(data.ngayBanHanh));
            $("#detailhv").val(data.maNamHoc);
            $("#detaildc").val(data.noiDungQuyDinh);
            $("#edit1").html('<button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>');
        }}
        
    })
}

function themHocky(){
    $("#addngaybd").datepicker({
    autoclose:true,
    orientation: "bottom",
    format: "mm-dd-yyyy",
    locale: 'vn',
    viewMode: 'years'
    })
    $("#addngaybd").on("dp.change", function (e) {
            $('#addngaybd').data("DateTimePicker").minDate(e.date);
        });
    $("#addngaykt").datepicker({
    autoclose:true,
    orientation: "bottom",
    format: "mm-dd-yyyy"
        })
    $('#addma').val('');
    $('#addnamhoc').val('');
    $('#addngaybd').val('');
    $('#addngaykt').val('');
    $("#addcbModal").modal("show");         
    }
$('#saveCbnv').click(function () {
    var so = $('#addma').val();
    var  nh = $('#addnamhoc').val();
    var ngay = $('#addngaybd').val();
    var nd = $('#addngaykt').val();

       var tem = new  QuyDinh (so,nh,ngay,nd) 
    $.ajax({
        url: "/api/Quydinh",
        type: "post",
        contentType: "application/json",
        dataType: 'json',
        data: JSON.stringify(tem),
        success: function () {
            confirm("Thêm Thành Công");
            location.reload();
        },
        error: function(data){
            confirm("Lỗi Dữ liệu !!! Kiểm Tra Lại.")
        }
        });
     });
//load dv
function convetToVietnam(str) { 
    str= str.toLowerCase();
    str= str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,"a"); 
    str= str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,"e"); 
    str= str.replace(/ì|í|ị|ỉ|ĩ/g,"i"); 
    str= str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,"o"); 
    str= str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,"u"); 
    str= str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g,"y"); 
    str= str.replace(/đ/g,"d"); 
    
    str= str.replace(/-+-/g,"-");
    str= str.replace(/^\-+|\-+$/g,""); 

    return str; 
}
function seach(){
    $.ajax({
        type: "GET",
        url: "/api/Quydinh",
        success: function(data){
            keyOld = $("#seach").val();
            arr = $("#tbody tr");
            // console.log(arr);
            for (i = 0; i < arr.length; i++) {
                element = arr[i].getElementsByTagName("td")[1].innerHTML;
                 tt =convetToVietnam(element); 
                let key=convetToVietnam(keyOld);
                console.log(tt.toUpperCase().indexOf(key.toUpperCase()));
                if (tt.toUpperCase().indexOf(key.toUpperCase()) > -1) {
                    arr[i].style.display = "";
                } else {
                    arr[i].style.display = "none";
                }
            }
        }
    });
}
</script>
}